#!/bin/bash

# Configuration
DATA_DIR="pokemon_data"
REPORT_FILE="pokemon_stats.csv"
TEMP_FILE="temp_stats.txt"
ERROR_LOG="summary_errors.txt"

# Ensure data directory exists
if [ ! -d "$DATA_DIR" ]; then
    echo "Error: '$DATA_DIR' not found. Run the batch fetcher first."
    exit 1
fi

# Initialize files
echo "Name,Height (m),Weight (kg)" > "$REPORT_FILE"
> "$ERROR_LOG"

# Extract data using jq and build CSV
for file in "$DATA_DIR"/*.json; do
    [ -f "$file" ] || continue
    jq -r '
    {
        name: (.name | ascii_upcase),
        height: (.height / 10),
        weight: (.weight / 10)
    } | [.name, .height, .weight] | @csv' "$file" >> "$REPORT_FILE" 2>>"$ERROR_LOG"
done

# Prepare data for stats: strip header and convert to space-separated format
tail -n +2 "$REPORT_FILE" | sed 's/"//g' | sed 's/,/ /g' > "$TEMP_FILE"

# Print and compute statistics
echo -e "\n Calculating Statistics..."
awk '
BEGIN {
    total_h = 0; total_w = 0; count = 0;
}
{
    total_h += $2;
    total_w += $3;
    count++;
}
END {
    if (count > 0) {
        avg_h = total_h / count;
        avg_w = total_w / count;
        printf "Total Pokémon: %d\n", count;
        printf "Average Height: %.2f m\n", avg_h;
        printf "Average Weight: %.2f kg\n", avg_w;
    } else {
        print " No valid Pokémon data found."
    }
}' "$TEMP_FILE"

# Clean up
rm -f "$TEMP_FILE"
[ -s "$ERROR_LOG" ] && echo -e "\n Errors were logged in $ERROR_LOG" || rm -f "$ERROR_LOG"

# Preview CSV output
echo -e "\n Report generated: $REPORT_FILE"
echo "Sample Output:"
head -n 6 "$REPORT_FILE"
